# 3. Создать собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
# пользователя данные и заполнять список необходимо только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и
# строки. Во время ввода пользователем очередного элемента необходимо реализовать
# проверку типа элемента. Вносить его в список, только если введено число. Класс-исключение
# должен не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.

class OnlyNumbers(Exception):

    @staticmethod
    def input_numbers():
        num_list = []
        while True:
            user_number = input('Введите число:')
            try:
                if user_number.isdigit():
                    num_list.append(int(user_number))
                elif user_number == 'stop':
                    print(num_list)
                    break
                else:
                    raise OnlyNumbers
            except OnlyNumbers:
                print('Вы ввели не число!')


OnlyNumbers.input_numbers()
